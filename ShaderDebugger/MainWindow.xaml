<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:local="clr-namespace:ShaderDebugger"
        
        xmlns:sharpGL="clr-namespace:SharpGL.WPF;assembly=SharpGL.WPF"
        
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit" x:Class="ShaderDebugger.MainWindow"
        
        mc:Ignorable="d"
        
        x:Name="mainWindow"
        Title="Shader Debugger" Height="600" Width="1200" MinHeight="300" MinWidth="600" Icon="Logo.PNG">
    <Window.Resources>
        <Style x:Key="headerTextStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="FontFamily" Value="Consolas"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Margin" Value="5"/>

            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0" Opacity="0.865">
                        <GradientStop Color="#FFA4A4A4" Offset="0"/>
                        <GradientStop Color="#FFFF4A4A" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="codeEditorTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="AcceptsReturn" Value="True"/>
            <Setter Property="AcceptsTab" Value="True"/>
            <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="FontFamily" Value="Consolas"/>
        </Style>

        <Style x:Key="glTypesControlsStyle" TargetType="{x:Type FrameworkElement}">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="2,0,5,0"/>
        </Style>

        <DataTemplate DataType="{x:Type local:Float}">
            <DockPanel>
                <TextBlock DockPanel.Dock="Left" Text="Value" Style="{StaticResource glTypesControlsStyle}"/>
                <xctk:DoubleUpDown FormatString="F2" Increment="0.1" Value="{Binding Value, Mode=TwoWay}" TextAlignment="Right" Style="{StaticResource glTypesControlsStyle}"/>
            </DockPanel>
        </DataTemplate>

        <DataTemplate DataType="{x:Type local:Vec2f}">
            <UniformGrid Rows="1" Columns="2">
                <DockPanel>
                    <TextBlock DockPanel.Dock="Left" Text="X" Style="{StaticResource glTypesControlsStyle}"/>
                    <xctk:DoubleUpDown FormatString="F2" Increment="0.1" Value="{Binding X, Mode=TwoWay}" TextAlignment="Right" Style="{StaticResource glTypesControlsStyle}"/>
                </DockPanel>
                <DockPanel>
                    <TextBlock DockPanel.Dock="Left" Text="Y" Style="{StaticResource glTypesControlsStyle}"/>
                    <xctk:DoubleUpDown FormatString="F2" Increment="0.1" Value="{Binding Y, Mode=TwoWay}" TextAlignment="Right" Style="{StaticResource glTypesControlsStyle}"/>
                </DockPanel>
            </UniformGrid>
        </DataTemplate>

        <DataTemplate DataType="{x:Type local:Vec3f}">
            <UniformGrid Rows="1" Columns="3">
                <DockPanel>
                    <TextBlock DockPanel.Dock="Left" Text="X" Style="{StaticResource glTypesControlsStyle}"/>
                    <xctk:DoubleUpDown FormatString="F2" Increment="0.1" Value="{Binding X, Mode=TwoWay}" TextAlignment="Right" Style="{StaticResource glTypesControlsStyle}"/>
                </DockPanel>
                <DockPanel>
                    <TextBlock DockPanel.Dock="Left" Text="Y" Style="{StaticResource glTypesControlsStyle}"/>
                    <xctk:DoubleUpDown FormatString="F2" Increment="0.1" Value="{Binding Y, Mode=TwoWay}" TextAlignment="Right" Style="{StaticResource glTypesControlsStyle}"/>
                </DockPanel>
                <DockPanel>
                    <TextBlock DockPanel.Dock="Left" Text="Z" Style="{StaticResource glTypesControlsStyle}"/>
                    <xctk:DoubleUpDown FormatString="F2" Increment="0.1" Value="{Binding Z, Mode=TwoWay}" TextAlignment="Right" Style="{StaticResource glTypesControlsStyle}"/>
                </DockPanel>
            </UniformGrid>
        </DataTemplate>

        <DataTemplate DataType="{x:Type local:Vec4f}">
            <UniformGrid Rows="1" Columns="4">
                <DockPanel>
                    <TextBlock DockPanel.Dock="Left" Text="X" Style="{StaticResource glTypesControlsStyle}"/>
                    <xctk:DoubleUpDown FormatString="F2" Increment="0.1" Value="{Binding X, Mode=TwoWay}" TextAlignment="Right" Style="{StaticResource glTypesControlsStyle}"/>
                </DockPanel>
                <DockPanel>
                    <TextBlock DockPanel.Dock="Left" Text="Y" Style="{StaticResource glTypesControlsStyle}"/>
                    <xctk:DoubleUpDown FormatString="F2" Increment="0.1" Value="{Binding Y, Mode=TwoWay}" TextAlignment="Right" Style="{StaticResource glTypesControlsStyle}"/>
                </DockPanel>
                <DockPanel>
                    <TextBlock DockPanel.Dock="Left" Text="Z" Style="{StaticResource glTypesControlsStyle}"/>
                    <xctk:DoubleUpDown FormatString="F2" Increment="0.1" Value="{Binding Z, Mode=TwoWay}" TextAlignment="Right" Style="{StaticResource glTypesControlsStyle}"/>
                </DockPanel>
                <DockPanel>
                    <TextBlock DockPanel.Dock="Left" Text="W" Style="{StaticResource glTypesControlsStyle}"/>
                    <xctk:DoubleUpDown FormatString="F2" Increment="0.1" Value="{Binding W, Mode=TwoWay}" TextAlignment="Right" Style="{StaticResource glTypesControlsStyle}"/>
                </DockPanel>
            </UniformGrid>
        </DataTemplate>

    </Window.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="0.6*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="0.14*"/>
        </Grid.RowDefinitions>
        <!-- User input part of the window -->
        <Grid Grid.Row="0" Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <DockPanel Grid.Column="0">
                    <TextBlock DockPanel.Dock="Top" Style="{StaticResource headerTextStyle}" Text="Vertex shader"/>
                    <TextBox x:Name="vertexShaderTextBox" Style="{StaticResource codeEditorTextBox}" Text="{Binding VertexShaderCode, Mode=TwoWay}"/>
                </DockPanel>
                <GridSplitter Grid.Column="1" Width="5" ResizeBehavior="PreviousAndNext"/>
                <DockPanel Grid.Column="2">
                    <TextBlock DockPanel.Dock="Top" Style="{StaticResource headerTextStyle}" Text="Fragment shader"/>
                    <TextBox x:Name="fragmentShaderTextBox" Style="{StaticResource codeEditorTextBox}" Text="{Binding FragmentShaderCode, Mode=TwoWay}"/>
                </DockPanel>
            </Grid>
            <GridSplitter Grid.Row="1" Height="5" HorizontalAlignment="Stretch"/>
            <Grid Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <DockPanel Grid.Column="0">
                    <TextBlock DockPanel.Dock="Top" Style="{StaticResource headerTextStyle}" Text="Vertices"/>
                    <UniformGrid DockPanel.Dock="Bottom" Columns="4" MinHeight="40">
                        <Button x:Name="deleteVerticesButton" Click="deleteVerticesButton_Click">
                            <TextBlock TextWrapping="Wrap">Delete selected vertex</TextBlock>
                        </Button>
                        <Button x:Name="deleteAttributeButton" Click="deleteAttributeButton_Click">
                            <TextBlock TextWrapping="Wrap">Delete selected attribute</TextBlock>
                        </Button>
                        <Button x:Name="newVertexButton" Content="New vertex" Click="newVertexButton_Click"/>
                        <Button x:Name="newAttributeButton" Content="New attribute" Click="newAttributeButton_Click"/>
                    </UniformGrid>

                    <DataGrid x:Name="verticesDataGrid" ItemsSource="{Binding Vertices, Mode=OneWay}" AutoGenerateColumns="False" CanUserAddRows="False" CanUserResizeRows="False" SelectionUnit="Cell"/>
                </DockPanel>
                <GridSplitter Grid.Column="1" Width="5" ResizeBehavior="PreviousAndNext"/>
                <DockPanel Grid.Column="2">
                    <TextBlock DockPanel.Dock="Top" Style="{StaticResource headerTextStyle}" Text="Uniforms"/>
                    <UniformGrid DockPanel.Dock="Bottom" Columns="2">
                        <Button x:Name="deleteUniformButton" Content="Delete selected" Click="deleteUniformButton_Click" RenderTransformOrigin="9,0"/>
                        <Button x:Name="newUniformButton" Content="New uniform" Click="newUniformButton_Click"/>
                    </UniformGrid>

                    <DataGrid x:Name="uniformsDataGrid" ItemsSource="{Binding Uniforms, Mode=TwoWay}" AutoGenerateColumns="False" CanUserResizeColumns="False" CanUserResizeRows="False">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="Auto"/>
                            <DataGridTextColumn Header="Location" Binding="{Binding Location, TargetNullValue=N/A}" IsReadOnly="True" Width="Auto"/>
                            <DataGridTextColumn Header="Type" Binding="{Binding TypeDescription}" IsReadOnly="True" Width="Auto"/>
                            <DataGridTemplateColumn Header="Value" Width="Auto">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ContentPresenter Content="{Binding Variable}"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>

                </DockPanel>
            </Grid>
        </Grid>

        <!-- Render part of the window -->
        <DockPanel Grid.Row="0" Grid.Column="1">
            <StackPanel DockPanel.Dock="Top">
                <TextBlock Style="{StaticResource headerTextStyle}" Text="Render Output"/>
            </StackPanel>
            <StackPanel DockPanel.Dock="Top" Orientation="Horizontal" Margin="10,5" HorizontalAlignment="Center">
                <CheckBox x:Name="renderSizeManualCheckBox" Checked="renderSizeManualCheckBox_Checked" Unchecked="renderSizeManualCheckBox_Unchecked" VerticalAlignment="Center"/>
                <TextBlock Text="Manual size" Margin="3,0,10,0" VerticalAlignment="Center"/>

                <TextBlock Text="Width" VerticalAlignment="Center" Margin="13,0,0,0"/>
                <TextBox x:Name="renderWidthTextBox" Margin="3,0,0,0" MinWidth="50" TextAlignment="Right" IsEnabled="False" VerticalAlignment="Center"/>

                <TextBlock Text="Height" Margin="5,0,0,0" VerticalAlignment="Center"/>
                <TextBox x:Name="renderHeightTextBox" Margin="3,0,0,0" MinWidth="50" TextAlignment="Right" IsEnabled="False" VerticalAlignment="Center"/>
            </StackPanel>
            <StackPanel DockPanel.Dock="Top" Orientation="Horizontal" Margin="10,5" HorizontalAlignment="Center">
                <TextBlock Text="Mode" Margin="5,0,3,0" VerticalAlignment="Center"/>
                <ComboBox x:Name="modeComboBox" MinWidth="100" VerticalAlignment="Center" Margin="5,0,0,0"/>
            </StackPanel>
            <StackPanel DockPanel.Dock="Top" HorizontalAlignment="Center" Orientation="Horizontal" Margin="10,5">
                <TextBlock Text="Background color"/>
                <xctk:ColorPicker VerticalAlignment="Top" MinWidth="59" Margin="5,0,0,0" SelectedColorChanged="ColorPicker_SelectedColorChanged"/>
            </StackPanel>
            <sharpGL:OpenGLControl x:Name="openGLControl" OpenGLInitialized="OpenGLControl_OpenGLInitialized" OpenGLDraw="OpenGLControl_OpenGLDraw" OpenGLVersion="OpenGL3_3" RenderContextType="FBO" FrameRate="10" Margin="5"/>
        </DockPanel>

        <!-- Output from shader compiler etc. -->
        <TextBox Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" x:Name="consoleOutputTextBox" IsReadOnly="True" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Visible" BorderThickness="5"
                 Text="{Binding ErrorOutput, TargetNullValue=OK}"/>
    </Grid>
</Window>
